CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

SELECT * FROM BIT_DB.Spotifydata LIMIT 30

-- What is the average danceability by artist and track?
SELECT artist_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

SELECT track_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY track_name;

-- Who are the top 10 artists based on popularity?
SELECT distinct artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc 
LIMIT 10;

-- What artist released the longest song? 
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

-- What is the average danceability for the 10 most popular songs?

SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE track_name IN (
SELECT track_name 
FROM BIT_DB.SpotifyData 
ORDER BY popularity desc 
LIMIT 10);

-- What are the top 10 songs with the most speechiness?
SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY speechiness desc
LIMIT 10;

-- Group the song titles by key. 
SELECT track_name, song_key
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY song_key asc;

-- Of the 10 lowest energy songs, which ones are instrumental?
SELECT track_name, energy, instrumentalness
FROM BIT_DB.Spotifydata
GROUP BY track_name
HAVING instrumentalness <> 0
ORDER BY energy asc ;

-- What is the average tempo of the 10 most danceable songs?
SELECT AVG(tempo) 
FROM BIT_DB.Spotifydata
WHERE track_name
IN (SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY danceability desc
LIMIT 10);

-- Which song is longest in duration?
SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

-- Calculate the average popularity of the artists. For every artist with a popularity of 90 or above, show their name, average popularity, and label them as a "Top Star".
WITH popularity_avg_CTE AS (
SELECT spotify.artist_name, AVG(spotify.popularity) as avg_popularity
FROM Spotifydata as spotify
GROUP BY spotify.artist_name
)
SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM popularity_avg_CTE
WHERE avg_popularity >= 90
